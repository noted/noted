# Makefile.in generated by automake 1.11.1 from Makefile.am.
# libmemcached/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/libmemcached
pkgincludedir = $(includedir)/libmemcached
pkglibdir = $(libdir)/libmemcached
pkglibexecdir = $(libexecdir)/libmemcached
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin12.3.0
host_triplet = i386-apple-darwin12.3.0
target_triplet = i386-apple-darwin12.3.0
#am__append_1 = memcached_util.h memcached_pool.h
#am__append_2 = hsieh_hash.c
am__append_3 = byteorder.c
am__append_4 = $(LTLIBSASL)
am__append_5 = memcached_sasl.c
#am__append_6 = dtrace_probes.h
#am__append_7 = libmemcached_probes.d
#am__append_8 = libmemcached_probes.o
subdir = libmemcached
DIST_COMMON = $(am__pkginclude_HEADERS_DIST) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/memcached_configure.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_cxx_compile_stdcxx_0x.m4 \
	$(top_srcdir)/m4/ac_cxx_header_stdcxx_98.m4 \
	$(top_srcdir)/m4/acx_pthread.m4 $(top_srcdir)/m4/byteorder.m4 \
	$(top_srcdir)/m4/deprecated.m4 \
	$(top_srcdir)/m4/enable_utillib.m4 \
	$(top_srcdir)/m4/extensions.m4 $(top_srcdir)/m4/hsieh.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/memcached.m4 \
	$(top_srcdir)/m4/pandora_64bit.m4 \
	$(top_srcdir)/m4/pandora_canonical.m4 \
	$(top_srcdir)/m4/pandora_check_compiler_version.m4 \
	$(top_srcdir)/m4/pandora_check_cxx_standard.m4 \
	$(top_srcdir)/m4/pandora_enable_dtrace.m4 \
	$(top_srcdir)/m4/pandora_ensure_gcc_version.m4 \
	$(top_srcdir)/m4/pandora_have_better_malloc.m4 \
	$(top_srcdir)/m4/pandora_have_sasl.m4 \
	$(top_srcdir)/m4/pandora_header_assert.m4 \
	$(top_srcdir)/m4/pandora_libtool.m4 \
	$(top_srcdir)/m4/pandora_optimize.m4 \
	$(top_srcdir)/m4/pandora_shared_ptr.m4 \
	$(top_srcdir)/m4/pandora_vc_build.m4 \
	$(top_srcdir)/m4/pandora_warnings.m4 \
	$(top_srcdir)/m4/pod2man.m4 \
	$(top_srcdir)/m4/protocol_binary.m4 \
	$(top_srcdir)/m4/setsockopt.m4 $(top_srcdir)/m4/visibility.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = memcached_configure.h
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__libmemcached_la_SOURCES_DIST = crc.c memcached.c memcached_auto.c \
	memcached_analyze.c memcached_behavior.c memcached_connect.c \
	memcached_delete.c memcached_do.c memcached_dump.c memcached_exist.c \
	memcached_fetch.c memcached_flush.c memcached_get.c \
	memcached_touch.c memcached_hash.c memcached_hosts.c \
	memcached_io.c memcached_purge.c memcached_flush_buffers.c \
	md5.c memcached_key.c memcached_quit.c memcached_parse.c \
	memcached_response.c memcached_result.c memcached_server.c \
	memcached_storage.c memcached_string.c memcached_stats.c \
	memcached_strerror.c memcached_verbosity.c memcached_version.c \
	murmur_hash.c jenkins_hash.c memcached_allocators.c \
	hsieh_hash.c byteorder.c memcached_sasl.c \
	libmemcached_probes.d
#am__objects_1 = libmemcached_la-hsieh_hash.lo
am__objects_2 = libmemcached_la-byteorder.lo
am__objects_3 = libmemcached_la-memcached_sasl.lo
am__objects_4 =
am_libmemcached_la_OBJECTS = libmemcached_la-crc.lo \
	libmemcached_la-memcached.lo libmemcached_la-memcached_auto.lo \
	libmemcached_la-memcached_analyze.lo \
	libmemcached_la-memcached_behavior.lo \
	libmemcached_la-memcached_connect.lo \
	libmemcached_la-memcached_delete.lo \
	libmemcached_la-memcached_do.lo \
	libmemcached_la-memcached_dump.lo \
	libmemcached_la-memcached_exist.lo \
	libmemcached_la-memcached_fetch.lo \
	libmemcached_la-memcached_flush.lo \
	libmemcached_la-memcached_get.lo \
	libmemcached_la-memcached_touch.lo \
	libmemcached_la-memcached_hash.lo \
	libmemcached_la-memcached_hosts.lo \
	libmemcached_la-memcached_io.lo \
	libmemcached_la-memcached_purge.lo \
	libmemcached_la-memcached_flush_buffers.lo \
	libmemcached_la-md5.lo libmemcached_la-memcached_key.lo \
	libmemcached_la-memcached_quit.lo \
	libmemcached_la-memcached_parse.lo \
	libmemcached_la-memcached_response.lo \
	libmemcached_la-memcached_result.lo \
	libmemcached_la-memcached_server.lo \
	libmemcached_la-memcached_storage.lo \
	libmemcached_la-memcached_string.lo \
	libmemcached_la-memcached_stats.lo \
	libmemcached_la-memcached_strerror.lo \
	libmemcached_la-memcached_verbosity.lo \
	libmemcached_la-memcached_version.lo \
	libmemcached_la-murmur_hash.lo libmemcached_la-jenkins_hash.lo \
	libmemcached_la-memcached_allocators.lo $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4)
libmemcached_la_OBJECTS = $(am_libmemcached_la_OBJECTS)
libmemcached_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libmemcached_la_CFLAGS) \
	$(CFLAGS) $(libmemcached_la_LDFLAGS) $(LDFLAGS) -o $@
libmemcachedcallbacks_la_LIBADD =
am_libmemcachedcallbacks_la_OBJECTS =  \
	libmemcachedcallbacks_la-memcached_callback.lo
libmemcachedcallbacks_la_OBJECTS =  \
	$(am_libmemcachedcallbacks_la_OBJECTS)
libmemcachedcallbacks_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libmemcachedcallbacks_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES =
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libmemcached_la_SOURCES) \
	$(libmemcachedcallbacks_la_SOURCES)
DIST_SOURCES = $(am__libmemcached_la_SOURCES_DIST) \
	$(libmemcachedcallbacks_la_SOURCES)
am__pkginclude_HEADERS_DIST = memcached.h memcached.hpp \
	memcached_configure.h memcached_constants.h memcached_get.h \
	memcached_result.h memcached_sasl.h memcached_server.h \
	memcached_storage.h memcached_string.h memcached_touch.h \
	memcached_types.h memcached_watchpoint.h visibility.h \
	memcached_util.h memcached_pool.h memcached_exist.h
HEADERS = $(noinst_HEADERS) $(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/ethan/Projects/noted/noted/vendor/bundle/ruby/2.0.0/gems/memcached-1.5.0/ext/libmemcached-0.32/config/missing --run aclocal-1.11
AMTAR = ${SHELL} /Users/ethan/Projects/noted/noted/vendor/bundle/ruby/2.0.0/gems/memcached-1.5.0/ext/libmemcached-0.32/config/missing --run tar
AM_CFLAGS =  -O3  -pedantic -Wall -Wextra -Wundef -Wshadow  -fdiagnostics-show-option -fvisibility=hidden -Wformat=2 -Wconversion -Wstrict-aliasing -Wstrict-prototypes -Wmissing-prototypes -Wredundant-decls -Wmissing-declarations -Wcast-align -Wswitch-default -Wswitch-enum -Wwrite-strings -Wlogical-op   
AM_CPPFLAGS = -I${top_srcdir} -I${top_builddir} -ggdb3 
AM_CXXFLAGS =  -O3  -pedantic -Wall -Wextra -Wundef -Wshadow  -fdiagnostics-show-option -fvisibility=hidden -Wformat=2 -Wconversion -Wstrict-aliasing -Woverloaded-virtual -Wnon-virtual-dtor -Wctor-dtor-privacy -Wno-long-long -Weffc++ -Wold-style-cast -Wredundant-decls   
AR = ar
AUTOCONF = ${SHELL} /Users/ethan/Projects/noted/noted/vendor/bundle/ruby/2.0.0/gems/memcached-1.5.0/ext/libmemcached-0.32/config/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/ethan/Projects/noted/noted/vendor/bundle/ruby/2.0.0/gems/memcached-1.5.0/ext/libmemcached-0.32/config/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/ethan/Projects/noted/noted/vendor/bundle/ruby/2.0.0/gems/memcached-1.5.0/ext/libmemcached-0.32/config/missing --run automake-1.11
AWK = awk
BETTER_MALLOC_LIBS = 
CC = clang -std=gnu99
CCDEPMODE = depmode=none
CC_VERSION = Apple LLVM version 4.2 (clang-425.0.28) (based on LLVM 3.2svn)
CFLAGS = -D_THREAD_SAFE  -fPIC   -Wno-error=shorten-64-to-32 -pipe   -Wno-error=shorten-64-to-32 -pipe
CFLAG_VISIBILITY = -fvisibility=hidden
CPP = clang -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -std=gnu++98
CXX_VERSION = i686-apple-darwin11-llvm-g++-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEPRECATED = 
DLLTOOL = false
DOXYGEN = 
DSYMUTIL = dsymutil
DTRACE = 
DTRACEFLAGS = 
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
HAVE_LIBSASL = yes
HAVE_LIBSASL2 = yes
HAVE_VISIBILITY = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
ISAINFO = no
LD = /usr/bin/ld
LDFLAGS = -fPIC -L. -L/Users/ethan/.rbenv/versions/2.0.0-p0/lib  -L. -L/Users/ethan/.rbenv/versions/2.0.0-p0/lib  -L/Users/ethan/.rbenv/versions/2.0.0-p0/lib
LD_UTIL_VERSION_SCRIPT = 
LD_VERSION_SCRIPT = 
LIBC_P = 
LIBM = 
LIBMEMCACHED_WITH_SASL_SUPPORT = #define LIBMEMCACHED_WITH_SASL_SUPPORT 1
LIBOBJS = 
LIBS =  
LIBSASL = -lsasl2
LIBSASL2 = -lsasl2
LIBSASL2_PREFIX = 
LIBSASL_PREFIX = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LTLIBSASL = -lsasl2
LTLIBSASL2 = -lsasl2
MAKEINFO = ${SHELL} /Users/ethan/Projects/noted/noted/vendor/bundle/ruby/2.0.0/gems/memcached-1.5.0/ext/libmemcached-0.32/config/missing --run makeinfo
MANIFEST_TOOL = :
MEMCACHEDUTIL_LIBRARY_VERSION = 0:0:0
MEMCACHED_LIBRARY_VERSION = 2:0:0
MEMC_BINARY = memcached
MKDIR_P = ../config/install-sh -c -d
NM = /usr/bin/nm
NMEDIT = nmedit
NO_CONVERSION = 
NO_REDUNDANT_DECLS = -Wno-redundant-decls
NO_SHADOW = -Wno-shadow
NO_STRICT_ALIASING = -fno-strict-aliasing -Wno-strict-aliasing
NO_UNREACHED = 
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = libmemcached
PACKAGE_BUGREPORT = http://tangent.org/552/libmemcached.html
PACKAGE_NAME = libmemcached
PACKAGE_STRING = libmemcached 0.32
PACKAGE_TARNAME = libmemcached
PACKAGE_URL = 
PACKAGE_VERSION = 0.32
PATH_SEPARATOR = :
PERL = perl
POD2MAN = /usr/bin/pod2man
PROTOSKIP_WARNINGS = -Wno-effc++ -Wno-shadow
PTHREAD_CC = clang -std=gnu99
PTHREAD_CFLAGS = -D_THREAD_SAFE 
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.32
abs_builddir = /Users/ethan/Projects/noted/noted/vendor/bundle/ruby/2.0.0/gems/memcached-1.5.0/ext/libmemcached-0.32/libmemcached
abs_srcdir = /Users/ethan/Projects/noted/noted/vendor/bundle/ruby/2.0.0/gems/memcached-1.5.0/ext/libmemcached-0.32/libmemcached
abs_top_builddir = /Users/ethan/Projects/noted/noted/vendor/bundle/ruby/2.0.0/gems/memcached-1.5.0/ext/libmemcached-0.32
abs_top_srcdir = /Users/ethan/Projects/noted/noted/vendor/bundle/ruby/2.0.0/gems/memcached-1.5.0/ext/libmemcached-0.32
ac_ct_AR = ar
ac_ct_CC = clang
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin12.3.0
build_alias = 
build_cpu = i386
build_os = darwin12.3.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i386-apple-darwin12.3.0
host_alias = 
host_cpu = i386
host_os = darwin12.3.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/ethan/Projects/noted/noted/vendor/bundle/ruby/2.0.0/gems/memcached-1.5.0/ext/libmemcached-0.32/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/config/install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/ethan/Projects/noted/noted/vendor/bundle/ruby/2.0.0/gems/memcached-1.5.0/ext
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i386-apple-darwin12.3.0
target_alias = 
target_cpu = i386
target_os = darwin12.3.0
target_vendor = apple
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
EXTRA_DIST = libmemcached_probes.d memcached/README.txt libmemcached.ver \
             memcached_configure.h.in

EXTRA_HEADERS =
BUILT_SOURCES = $(am__append_6)
noinst_HEADERS = libmemcached_probes.h \
                 memcached_io.h \
                 memcached_internal.h \
                 common.h \
                 memcached/protocol_binary.h

pkginclude_HEADERS = memcached.h memcached.hpp memcached_configure.h \
	memcached_constants.h memcached_get.h memcached_exist.h memcached_result.h \
	memcached_sasl.h memcached_server.h memcached_storage.h \
	memcached_string.h memcached_touch.h memcached_types.h \
	memcached_watchpoint.h visibility.h $(am__append_1)
lib_LTLIBRARIES = libmemcached.la
noinst_LTLIBRARIES = libmemcachedcallbacks.la
libmemcachedcallbacks_la_CFLAGS = ${AM_CFLAGS} ${NO_STRICT_ALIASING}
libmemcachedcallbacks_la_SOURCES = memcached_callback.c
libmemcached_la_CFLAGS = ${AM_CFLAGS} ${NO_CONVERSION}
libmemcached_la_SOURCES = crc.c memcached.c memcached_auto.c \
	memcached_analyze.c memcached_behavior.c memcached_connect.c \
	memcached_delete.c memcached_do.c memcached_dump.c \
	memcached_exist.c memcached_fetch.c memcached_flush.c memcached_get.c \
	memcached_touch.c memcached_hash.c memcached_hosts.c \
	memcached_io.c memcached_purge.c memcached_flush_buffers.c \
	md5.c memcached_key.c memcached_quit.c memcached_parse.c \
	memcached_response.c memcached_result.c memcached_server.c \
	memcached_storage.c memcached_string.c memcached_stats.c \
	memcached_strerror.c memcached_verbosity.c memcached_version.c \
	murmur_hash.c jenkins_hash.c memcached_allocators.c \
	$(am__append_2) $(am__append_3) $(am__append_5) \
	$(am__append_7)
libmemcached_la_DEPENDENCIES = libmemcachedcallbacks.la \
	$(am__append_8)
libmemcached_la_LIBADD = $(LIBM) libmemcachedcallbacks.la
libmemcached_la_LDFLAGS = -version-info $(MEMCACHED_LIBRARY_VERSION) \
	$(LD_VERSION_SCRIPT) $(LIBM) $(am__append_4)
SUFFIXES = .d
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .d .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu libmemcached/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu libmemcached/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
memcached_configure.h: $(top_builddir)/config.status $(srcdir)/memcached_configure.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libmemcached.la: $(libmemcached_la_OBJECTS) $(libmemcached_la_DEPENDENCIES)
	$(libmemcached_la_LINK) -rpath $(libdir) $(libmemcached_la_OBJECTS) $(libmemcached_la_LIBADD) $(LIBS)
libmemcachedcallbacks.la: $(libmemcachedcallbacks_la_OBJECTS) $(libmemcachedcallbacks_la_DEPENDENCIES)
	$(libmemcachedcallbacks_la_LINK)  $(libmemcachedcallbacks_la_OBJECTS) $(libmemcachedcallbacks_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/libmemcached_la-byteorder.Plo
#include ./$(DEPDIR)/libmemcached_la-crc.Plo
#include ./$(DEPDIR)/libmemcached_la-hsieh_hash.Plo
#include ./$(DEPDIR)/libmemcached_la-jenkins_hash.Plo
#include ./$(DEPDIR)/libmemcached_la-md5.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_allocators.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_analyze.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_auto.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_behavior.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_connect.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_delete.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_do.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_dump.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_fetch.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_flush.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_flush_buffers.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_get.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_hash.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_hosts.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_io.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_key.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_parse.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_purge.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_quit.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_response.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_result.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_sasl.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_server.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_stats.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_storage.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_strerror.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_string.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_touch.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_verbosity.Plo
#include ./$(DEPDIR)/libmemcached_la-memcached_version.Plo
#include ./$(DEPDIR)/libmemcached_la-murmur_hash.Plo
#include ./$(DEPDIR)/libmemcachedcallbacks_la-memcached_callback.Plo

.c.o:
#	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(COMPILE) -c -o $@ $<

.c.obj:
#	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LTCOMPILE) -c -o $@ $<

libmemcached_la-crc.lo: crc.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-crc.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-crc.Tpo -c -o libmemcached_la-crc.lo `test -f 'crc.c' || echo '$(srcdir)/'`crc.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-crc.Tpo $(DEPDIR)/libmemcached_la-crc.Plo
#	source='crc.c' object='libmemcached_la-crc.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-crc.lo `test -f 'crc.c' || echo '$(srcdir)/'`crc.c

libmemcached_la-memcached.lo: memcached.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached.Tpo -c -o libmemcached_la-memcached.lo `test -f 'memcached.c' || echo '$(srcdir)/'`memcached.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached.Tpo $(DEPDIR)/libmemcached_la-memcached.Plo
#	source='memcached.c' object='libmemcached_la-memcached.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached.lo `test -f 'memcached.c' || echo '$(srcdir)/'`memcached.c

libmemcached_la-memcached_auto.lo: memcached_auto.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_auto.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_auto.Tpo -c -o libmemcached_la-memcached_auto.lo `test -f 'memcached_auto.c' || echo '$(srcdir)/'`memcached_auto.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_auto.Tpo $(DEPDIR)/libmemcached_la-memcached_auto.Plo
#	source='memcached_auto.c' object='libmemcached_la-memcached_auto.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_auto.lo `test -f 'memcached_auto.c' || echo '$(srcdir)/'`memcached_auto.c

libmemcached_la-memcached_analyze.lo: memcached_analyze.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_analyze.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_analyze.Tpo -c -o libmemcached_la-memcached_analyze.lo `test -f 'memcached_analyze.c' || echo '$(srcdir)/'`memcached_analyze.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_analyze.Tpo $(DEPDIR)/libmemcached_la-memcached_analyze.Plo
#	source='memcached_analyze.c' object='libmemcached_la-memcached_analyze.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_analyze.lo `test -f 'memcached_analyze.c' || echo '$(srcdir)/'`memcached_analyze.c

libmemcached_la-memcached_behavior.lo: memcached_behavior.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_behavior.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_behavior.Tpo -c -o libmemcached_la-memcached_behavior.lo `test -f 'memcached_behavior.c' || echo '$(srcdir)/'`memcached_behavior.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_behavior.Tpo $(DEPDIR)/libmemcached_la-memcached_behavior.Plo
#	source='memcached_behavior.c' object='libmemcached_la-memcached_behavior.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_behavior.lo `test -f 'memcached_behavior.c' || echo '$(srcdir)/'`memcached_behavior.c

libmemcached_la-memcached_connect.lo: memcached_connect.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_connect.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_connect.Tpo -c -o libmemcached_la-memcached_connect.lo `test -f 'memcached_connect.c' || echo '$(srcdir)/'`memcached_connect.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_connect.Tpo $(DEPDIR)/libmemcached_la-memcached_connect.Plo
#	source='memcached_connect.c' object='libmemcached_la-memcached_connect.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_connect.lo `test -f 'memcached_connect.c' || echo '$(srcdir)/'`memcached_connect.c

libmemcached_la-memcached_delete.lo: memcached_delete.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_delete.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_delete.Tpo -c -o libmemcached_la-memcached_delete.lo `test -f 'memcached_delete.c' || echo '$(srcdir)/'`memcached_delete.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_delete.Tpo $(DEPDIR)/libmemcached_la-memcached_delete.Plo
#	source='memcached_delete.c' object='libmemcached_la-memcached_delete.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_delete.lo `test -f 'memcached_delete.c' || echo '$(srcdir)/'`memcached_delete.c

libmemcached_la-memcached_do.lo: memcached_do.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_do.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_do.Tpo -c -o libmemcached_la-memcached_do.lo `test -f 'memcached_do.c' || echo '$(srcdir)/'`memcached_do.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_do.Tpo $(DEPDIR)/libmemcached_la-memcached_do.Plo
#	source='memcached_do.c' object='libmemcached_la-memcached_do.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_do.lo `test -f 'memcached_do.c' || echo '$(srcdir)/'`memcached_do.c

libmemcached_la-memcached_dump.lo: memcached_dump.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_dump.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_dump.Tpo -c -o libmemcached_la-memcached_dump.lo `test -f 'memcached_dump.c' || echo '$(srcdir)/'`memcached_dump.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_dump.Tpo $(DEPDIR)/libmemcached_la-memcached_dump.Plo
#	source='memcached_dump.c' object='libmemcached_la-memcached_dump.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_dump.lo `test -f 'memcached_dump.c' || echo '$(srcdir)/'`memcached_dump.c

libmemcached_la-memcached_exist.lo: memcached_exist.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_exist.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_exist.Tpo -c -o libmemcached_la-memcached_exist.lo `test -f 'memcached_exist.c' || echo '$(srcdir)/'`memcached_exist.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_exist.Tpo $(DEPDIR)/libmemcached_la-memcached_exist.Plo
#	source='memcached_exist.c' object='libmemcached_la-memcached_exist.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_exist.lo `test -f 'memcached_exist.c' || echo '$(srcdir)/'`memcached_exist.c

libmemcached_la-memcached_fetch.lo: memcached_fetch.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_fetch.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_fetch.Tpo -c -o libmemcached_la-memcached_fetch.lo `test -f 'memcached_fetch.c' || echo '$(srcdir)/'`memcached_fetch.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_fetch.Tpo $(DEPDIR)/libmemcached_la-memcached_fetch.Plo
#	source='memcached_fetch.c' object='libmemcached_la-memcached_fetch.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_fetch.lo `test -f 'memcached_fetch.c' || echo '$(srcdir)/'`memcached_fetch.c

libmemcached_la-memcached_flush.lo: memcached_flush.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_flush.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_flush.Tpo -c -o libmemcached_la-memcached_flush.lo `test -f 'memcached_flush.c' || echo '$(srcdir)/'`memcached_flush.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_flush.Tpo $(DEPDIR)/libmemcached_la-memcached_flush.Plo
#	source='memcached_flush.c' object='libmemcached_la-memcached_flush.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_flush.lo `test -f 'memcached_flush.c' || echo '$(srcdir)/'`memcached_flush.c

libmemcached_la-memcached_get.lo: memcached_get.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_get.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_get.Tpo -c -o libmemcached_la-memcached_get.lo `test -f 'memcached_get.c' || echo '$(srcdir)/'`memcached_get.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_get.Tpo $(DEPDIR)/libmemcached_la-memcached_get.Plo
#	source='memcached_get.c' object='libmemcached_la-memcached_get.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_get.lo `test -f 'memcached_get.c' || echo '$(srcdir)/'`memcached_get.c

libmemcached_la-memcached_touch.lo: memcached_touch.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_touch.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_touch.Tpo -c -o libmemcached_la-memcached_touch.lo `test -f 'memcached_touch.c' || echo '$(srcdir)/'`memcached_touch.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_touch.Tpo $(DEPDIR)/libmemcached_la-memcached_touch.Plo
#	source='memcached_touch.c' object='libmemcached_la-memcached_touch.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_touch.lo `test -f 'memcached_touch.c' || echo '$(srcdir)/'`memcached_touch.c

libmemcached_la-memcached_hash.lo: memcached_hash.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_hash.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_hash.Tpo -c -o libmemcached_la-memcached_hash.lo `test -f 'memcached_hash.c' || echo '$(srcdir)/'`memcached_hash.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_hash.Tpo $(DEPDIR)/libmemcached_la-memcached_hash.Plo
#	source='memcached_hash.c' object='libmemcached_la-memcached_hash.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_hash.lo `test -f 'memcached_hash.c' || echo '$(srcdir)/'`memcached_hash.c

libmemcached_la-memcached_hosts.lo: memcached_hosts.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_hosts.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_hosts.Tpo -c -o libmemcached_la-memcached_hosts.lo `test -f 'memcached_hosts.c' || echo '$(srcdir)/'`memcached_hosts.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_hosts.Tpo $(DEPDIR)/libmemcached_la-memcached_hosts.Plo
#	source='memcached_hosts.c' object='libmemcached_la-memcached_hosts.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_hosts.lo `test -f 'memcached_hosts.c' || echo '$(srcdir)/'`memcached_hosts.c

libmemcached_la-memcached_io.lo: memcached_io.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_io.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_io.Tpo -c -o libmemcached_la-memcached_io.lo `test -f 'memcached_io.c' || echo '$(srcdir)/'`memcached_io.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_io.Tpo $(DEPDIR)/libmemcached_la-memcached_io.Plo
#	source='memcached_io.c' object='libmemcached_la-memcached_io.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_io.lo `test -f 'memcached_io.c' || echo '$(srcdir)/'`memcached_io.c

libmemcached_la-memcached_purge.lo: memcached_purge.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_purge.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_purge.Tpo -c -o libmemcached_la-memcached_purge.lo `test -f 'memcached_purge.c' || echo '$(srcdir)/'`memcached_purge.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_purge.Tpo $(DEPDIR)/libmemcached_la-memcached_purge.Plo
#	source='memcached_purge.c' object='libmemcached_la-memcached_purge.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_purge.lo `test -f 'memcached_purge.c' || echo '$(srcdir)/'`memcached_purge.c

libmemcached_la-memcached_flush_buffers.lo: memcached_flush_buffers.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_flush_buffers.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_flush_buffers.Tpo -c -o libmemcached_la-memcached_flush_buffers.lo `test -f 'memcached_flush_buffers.c' || echo '$(srcdir)/'`memcached_flush_buffers.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_flush_buffers.Tpo $(DEPDIR)/libmemcached_la-memcached_flush_buffers.Plo
#	source='memcached_flush_buffers.c' object='libmemcached_la-memcached_flush_buffers.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_flush_buffers.lo `test -f 'memcached_flush_buffers.c' || echo '$(srcdir)/'`memcached_flush_buffers.c

libmemcached_la-md5.lo: md5.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-md5.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-md5.Tpo -c -o libmemcached_la-md5.lo `test -f 'md5.c' || echo '$(srcdir)/'`md5.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-md5.Tpo $(DEPDIR)/libmemcached_la-md5.Plo
#	source='md5.c' object='libmemcached_la-md5.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-md5.lo `test -f 'md5.c' || echo '$(srcdir)/'`md5.c

libmemcached_la-memcached_key.lo: memcached_key.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_key.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_key.Tpo -c -o libmemcached_la-memcached_key.lo `test -f 'memcached_key.c' || echo '$(srcdir)/'`memcached_key.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_key.Tpo $(DEPDIR)/libmemcached_la-memcached_key.Plo
#	source='memcached_key.c' object='libmemcached_la-memcached_key.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_key.lo `test -f 'memcached_key.c' || echo '$(srcdir)/'`memcached_key.c

libmemcached_la-memcached_quit.lo: memcached_quit.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_quit.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_quit.Tpo -c -o libmemcached_la-memcached_quit.lo `test -f 'memcached_quit.c' || echo '$(srcdir)/'`memcached_quit.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_quit.Tpo $(DEPDIR)/libmemcached_la-memcached_quit.Plo
#	source='memcached_quit.c' object='libmemcached_la-memcached_quit.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_quit.lo `test -f 'memcached_quit.c' || echo '$(srcdir)/'`memcached_quit.c

libmemcached_la-memcached_parse.lo: memcached_parse.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_parse.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_parse.Tpo -c -o libmemcached_la-memcached_parse.lo `test -f 'memcached_parse.c' || echo '$(srcdir)/'`memcached_parse.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_parse.Tpo $(DEPDIR)/libmemcached_la-memcached_parse.Plo
#	source='memcached_parse.c' object='libmemcached_la-memcached_parse.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_parse.lo `test -f 'memcached_parse.c' || echo '$(srcdir)/'`memcached_parse.c

libmemcached_la-memcached_response.lo: memcached_response.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_response.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_response.Tpo -c -o libmemcached_la-memcached_response.lo `test -f 'memcached_response.c' || echo '$(srcdir)/'`memcached_response.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_response.Tpo $(DEPDIR)/libmemcached_la-memcached_response.Plo
#	source='memcached_response.c' object='libmemcached_la-memcached_response.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_response.lo `test -f 'memcached_response.c' || echo '$(srcdir)/'`memcached_response.c

libmemcached_la-memcached_result.lo: memcached_result.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_result.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_result.Tpo -c -o libmemcached_la-memcached_result.lo `test -f 'memcached_result.c' || echo '$(srcdir)/'`memcached_result.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_result.Tpo $(DEPDIR)/libmemcached_la-memcached_result.Plo
#	source='memcached_result.c' object='libmemcached_la-memcached_result.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_result.lo `test -f 'memcached_result.c' || echo '$(srcdir)/'`memcached_result.c

libmemcached_la-memcached_server.lo: memcached_server.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_server.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_server.Tpo -c -o libmemcached_la-memcached_server.lo `test -f 'memcached_server.c' || echo '$(srcdir)/'`memcached_server.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_server.Tpo $(DEPDIR)/libmemcached_la-memcached_server.Plo
#	source='memcached_server.c' object='libmemcached_la-memcached_server.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_server.lo `test -f 'memcached_server.c' || echo '$(srcdir)/'`memcached_server.c

libmemcached_la-memcached_storage.lo: memcached_storage.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_storage.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_storage.Tpo -c -o libmemcached_la-memcached_storage.lo `test -f 'memcached_storage.c' || echo '$(srcdir)/'`memcached_storage.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_storage.Tpo $(DEPDIR)/libmemcached_la-memcached_storage.Plo
#	source='memcached_storage.c' object='libmemcached_la-memcached_storage.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_storage.lo `test -f 'memcached_storage.c' || echo '$(srcdir)/'`memcached_storage.c

libmemcached_la-memcached_string.lo: memcached_string.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_string.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_string.Tpo -c -o libmemcached_la-memcached_string.lo `test -f 'memcached_string.c' || echo '$(srcdir)/'`memcached_string.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_string.Tpo $(DEPDIR)/libmemcached_la-memcached_string.Plo
#	source='memcached_string.c' object='libmemcached_la-memcached_string.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_string.lo `test -f 'memcached_string.c' || echo '$(srcdir)/'`memcached_string.c

libmemcached_la-memcached_stats.lo: memcached_stats.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_stats.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_stats.Tpo -c -o libmemcached_la-memcached_stats.lo `test -f 'memcached_stats.c' || echo '$(srcdir)/'`memcached_stats.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_stats.Tpo $(DEPDIR)/libmemcached_la-memcached_stats.Plo
#	source='memcached_stats.c' object='libmemcached_la-memcached_stats.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_stats.lo `test -f 'memcached_stats.c' || echo '$(srcdir)/'`memcached_stats.c

libmemcached_la-memcached_strerror.lo: memcached_strerror.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_strerror.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_strerror.Tpo -c -o libmemcached_la-memcached_strerror.lo `test -f 'memcached_strerror.c' || echo '$(srcdir)/'`memcached_strerror.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_strerror.Tpo $(DEPDIR)/libmemcached_la-memcached_strerror.Plo
#	source='memcached_strerror.c' object='libmemcached_la-memcached_strerror.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_strerror.lo `test -f 'memcached_strerror.c' || echo '$(srcdir)/'`memcached_strerror.c

libmemcached_la-memcached_verbosity.lo: memcached_verbosity.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_verbosity.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_verbosity.Tpo -c -o libmemcached_la-memcached_verbosity.lo `test -f 'memcached_verbosity.c' || echo '$(srcdir)/'`memcached_verbosity.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_verbosity.Tpo $(DEPDIR)/libmemcached_la-memcached_verbosity.Plo
#	source='memcached_verbosity.c' object='libmemcached_la-memcached_verbosity.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_verbosity.lo `test -f 'memcached_verbosity.c' || echo '$(srcdir)/'`memcached_verbosity.c

libmemcached_la-memcached_version.lo: memcached_version.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_version.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_version.Tpo -c -o libmemcached_la-memcached_version.lo `test -f 'memcached_version.c' || echo '$(srcdir)/'`memcached_version.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_version.Tpo $(DEPDIR)/libmemcached_la-memcached_version.Plo
#	source='memcached_version.c' object='libmemcached_la-memcached_version.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_version.lo `test -f 'memcached_version.c' || echo '$(srcdir)/'`memcached_version.c

libmemcached_la-murmur_hash.lo: murmur_hash.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-murmur_hash.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-murmur_hash.Tpo -c -o libmemcached_la-murmur_hash.lo `test -f 'murmur_hash.c' || echo '$(srcdir)/'`murmur_hash.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-murmur_hash.Tpo $(DEPDIR)/libmemcached_la-murmur_hash.Plo
#	source='murmur_hash.c' object='libmemcached_la-murmur_hash.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-murmur_hash.lo `test -f 'murmur_hash.c' || echo '$(srcdir)/'`murmur_hash.c

libmemcached_la-jenkins_hash.lo: jenkins_hash.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-jenkins_hash.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-jenkins_hash.Tpo -c -o libmemcached_la-jenkins_hash.lo `test -f 'jenkins_hash.c' || echo '$(srcdir)/'`jenkins_hash.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-jenkins_hash.Tpo $(DEPDIR)/libmemcached_la-jenkins_hash.Plo
#	source='jenkins_hash.c' object='libmemcached_la-jenkins_hash.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-jenkins_hash.lo `test -f 'jenkins_hash.c' || echo '$(srcdir)/'`jenkins_hash.c

libmemcached_la-memcached_allocators.lo: memcached_allocators.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_allocators.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_allocators.Tpo -c -o libmemcached_la-memcached_allocators.lo `test -f 'memcached_allocators.c' || echo '$(srcdir)/'`memcached_allocators.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_allocators.Tpo $(DEPDIR)/libmemcached_la-memcached_allocators.Plo
#	source='memcached_allocators.c' object='libmemcached_la-memcached_allocators.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_allocators.lo `test -f 'memcached_allocators.c' || echo '$(srcdir)/'`memcached_allocators.c

libmemcached_la-hsieh_hash.lo: hsieh_hash.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-hsieh_hash.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-hsieh_hash.Tpo -c -o libmemcached_la-hsieh_hash.lo `test -f 'hsieh_hash.c' || echo '$(srcdir)/'`hsieh_hash.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-hsieh_hash.Tpo $(DEPDIR)/libmemcached_la-hsieh_hash.Plo
#	source='hsieh_hash.c' object='libmemcached_la-hsieh_hash.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-hsieh_hash.lo `test -f 'hsieh_hash.c' || echo '$(srcdir)/'`hsieh_hash.c

libmemcached_la-byteorder.lo: byteorder.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-byteorder.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-byteorder.Tpo -c -o libmemcached_la-byteorder.lo `test -f 'byteorder.c' || echo '$(srcdir)/'`byteorder.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-byteorder.Tpo $(DEPDIR)/libmemcached_la-byteorder.Plo
#	source='byteorder.c' object='libmemcached_la-byteorder.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-byteorder.lo `test -f 'byteorder.c' || echo '$(srcdir)/'`byteorder.c

libmemcached_la-memcached_sasl.lo: memcached_sasl.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -MT libmemcached_la-memcached_sasl.lo -MD -MP -MF $(DEPDIR)/libmemcached_la-memcached_sasl.Tpo -c -o libmemcached_la-memcached_sasl.lo `test -f 'memcached_sasl.c' || echo '$(srcdir)/'`memcached_sasl.c
#	$(am__mv) $(DEPDIR)/libmemcached_la-memcached_sasl.Tpo $(DEPDIR)/libmemcached_la-memcached_sasl.Plo
#	source='memcached_sasl.c' object='libmemcached_la-memcached_sasl.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcached_la_CFLAGS) $(CFLAGS) -c -o libmemcached_la-memcached_sasl.lo `test -f 'memcached_sasl.c' || echo '$(srcdir)/'`memcached_sasl.c

libmemcachedcallbacks_la-memcached_callback.lo: memcached_callback.c
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcachedcallbacks_la_CFLAGS) $(CFLAGS) -MT libmemcachedcallbacks_la-memcached_callback.lo -MD -MP -MF $(DEPDIR)/libmemcachedcallbacks_la-memcached_callback.Tpo -c -o libmemcachedcallbacks_la-memcached_callback.lo `test -f 'memcached_callback.c' || echo '$(srcdir)/'`memcached_callback.c
#	$(am__mv) $(DEPDIR)/libmemcachedcallbacks_la-memcached_callback.Tpo $(DEPDIR)/libmemcachedcallbacks_la-memcached_callback.Plo
#	source='memcached_callback.c' object='libmemcachedcallbacks_la-memcached_callback.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmemcachedcallbacks_la_CFLAGS) $(CFLAGS) -c -o libmemcachedcallbacks_la-memcached_callback.lo `test -f 'memcached_callback.c' || echo '$(srcdir)/'`memcached_callback.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgincludedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-pkgincludeHEADERS install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-libLTLIBRARIES \
	uninstall-pkgincludeHEADERS


dtrace_probes.h: libmemcached_probes.d
	$(DTRACE) $(DTRACEFLAGS) -h -o dtrace_probes.h -s libmemcached_probes.d

libmemcached_probes.o: libmemcached_probes.d $(libmemcached_la_OBJECTS)
	$(DTRACE) $(DTRACEFLAGS) -o .libs/libmemcached_probes.o -G -s libmemcached_probes.d `grep '^pic_object' *.lo | cut -f 2 -d\'`
	$(DTRACE) $(DTRACEFLAGS) -o libmemcached_probes.o -G -s libmemcached_probes.d `grep non_pic_object *.lo | cut -f 2 -d\' `

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
