=head1 NAME

memcached_set_memory_allocators, memcached_get_memory_allocators - Manage memory allocator functions

=head1 LIBRARY

C Client Library for memcached (libmemcached, -lmemcached)

=head1 SYNOPSIS

  #include <memcached.h>

  memcached_return 
    memcached_set_memory_allocators(memcached_st *ptr,
                                    memcached_malloc_function mem_malloc,
                                    memcached_free_function mem_free,
                                    memcached_realloc_function mem_realloc,
                                    memcached_calloc_function mem_calloc);

  void memcached_get_memory_allocators(memcached_st *ptr,
                                       memcached_malloc_function *mem_malloc,
                                       memcached_free_function *mem_free,
                                       memcached_realloc_function *mem_realloc,
                                       memcached_calloc_function *mem_calloc);

  void *(*memcached_malloc_function)(memcached_st *ptr, const size_t size);
  void *(*memcached_realloc_function)(memcached_st *ptr, void *mem, 
                                      const size_t size);
  void  (*memcached_free_function)(memcached_st *ptr, void *mem);
  void *(*memcached_calloc_function)(memcached_st *ptr, size_t nelem, 
                                     const size_t elsize);


=head1 DESCRIPTION

libmemcached(3) allows you to specify your own memory allocators optimized
for your application.

memcached_set_memory_allocators() is used to set the memory allocators used
by the memcached instance specified by ptr. Please note that you cannot
override only one of the memory allocators, you have to specify a complete
new set if you want to override one of them. All of the memory allocation
functions should behave as specified in the C99 standard. Specify NULL as
all functions to reset them to the default values.

memcached_get_memory_allocators() is used to get the currently used memory
allocators by a mamcached handle.

The first argument to the memory allocator functions is a pointer to a
memcached structure, and you may use the memcached_set_user_data() and
memcached_get_user_data() to store a user-specific value to each memcached
structure.

=head1 RETURN

memcached_set_memory_allocators() return MEMCACHED_SUCCESS upon success, 
and MEMCACHED_FAILURE if you don't pass a complete set of function pointers.

=head1 HOME

To find out more information please check:
L<http://tangent.org/552/libmemcached.html>

=head1 AUTHOR

Trond Norbye, E<lt>trond.norbye@sun.comE<gt>

=head1 SEE ALSO

memcached(1) libmemcached(3) memcached_get_user_data(3) memcached_set_user_data(3)

=cut

