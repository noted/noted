#!/usr/bin/env ruby
# encoding: UTF-8

require 'rubygems'
require 'bson'

# Note that, at the moment, this will not properly round-trip
# in all cases from the output generated by b2json.
begin
require 'json/pure'  # broken with 'json/ext'
rescue LoadError
  puts "This script requires json/pure. Please install one of the following:"
  puts "  gem install json_pure"
  puts "  gem install json"
  Process.exit
end

# Convert all JSON objects in an IO into BSON.
def print_j2bson(io)
  io.each_line do |line|
    jsonobj = JSON.parse(line, { :object_class => BSON::OrderedHash } )
    bsonobj = BSON.serialize(jsonobj)
    STDOUT << bsonobj.to_s
  end
end

# print usage
def usage()
    STDERR << <<END_OF_USAGE
usage:  j2bson [-h] [file1 [file2]]

   Converts a JSON file to BSON on STDOUT.
   You can pass multiple filenames.
   If no filenames are passed, then STDIN is consumed.

END_OF_USAGE
    exit
end

# no arg, use STDIN
# -h, print usage and exit
# otherwise loop of filenames
if ARGV.empty? then
    print_j2bson(STDIN)
    exit
elsif ARGV[0] == "-h" then
    usage()
else
    ARGV.each { |fname| print_j2bson(File.new(fname)) }
end
